// **RECUERDA** PRIORIDAD EN FUNCI�N DEL ORDEN DE LAS REGLAS (LA SUPERIOR LA M�S PRIORITARIA)

rule Trabajador_en_el_Almacen_habilidad_1 {
  declarations
    practica.objetos.Trabajador tr1;
    practica.objetos.Tarea ta1;
  preconditions
    tr1.getArea().toString().equals("A");
    tr1.getHerramienta() == null;
    ta1.getTipo().equals(tr1.getHabMax(0));
    ta1.getUnidades() > 0;
  actions
    tr1.setHerramienta(tr1.getHerramienta(0));
    modified(tr1);
}

rule Trabajador_en_el_Almacen_habilidad_2 {
  declarations
    practica.objetos.Trabajador tr1;
    practica.objetos.Tarea ta1;
  preconditions
    tr1.getArea().toString().equals("A");
    tr1.getHerramienta() == null;
    ta1.getTipo().equals(tr1.getHabMax(1));
    ta1.getUnidades() > 0;
  actions
    tr1.setHerramienta(tr1.getHerramienta(1));
    modified(tr1);
}
rule Trabajador_en_el_Almacen_habilidad_3 {
  declarations
    practica.objetos.Trabajador tr1;
    practica.objetos.Tarea ta1;
  preconditions
    tr1.getArea().toString().equals("A");
    tr1.getHerramienta() == null;
    ta1.getTipo().equals(tr1.getHabMax(2));
    ta1.getUnidades() > 0;
  actions
    tr1.setHerramienta(tr1.getHerramienta(2));
    modified(tr1);
}
rule Trabajador_con_Herramienta_Almacen{
    declarations
        practica.objetos.Trabajador tr1;
        practica.objetos.Tarea ta1;
      preconditions
        tr1.getArea().toString().equals("A");
        tr1.getHerramienta() != null;
        ta1.getTipo().equals(tr1.getUso());
        ta1.getUnidades() > 0;
        tr1.isMin(ta1);
      actions
        tr1.setMinutosTrabajados(ta1.getArea(),ta1.getUnidades());
        tr1.setArea(ta1.getArea());
        ta1.setUnidades(0);
        modified(ta1);
        modified(tr1);
}

rule Trabajador_con_Herramienta {
  declarations
    practica.objetos.Trabajador tr1;
    practica.objetos.Tarea ta1;
  preconditions
    !tr1.getArea().toString().equals("A");
    ta1.getUnidades() > 0;
    ta1.getTipo().equals(tr1.getUso());
    tr1.isMin(ta1);
  actions
    tr1.setMinutosTrabajados(ta1.getArea() , ta1.getUnidades());
    tr1.setArea(ta1.getArea());
    ta1.setUnidades(0);
    modified(ta1);
    modified(tr1);
}


rule Trabajador_con_Herramienta_sin_tarea{
    declarations
        practica.objetos.Trabajador tr1;
        practica.objetos.Tarea ta1;
    preconditions
        !tr1.getNombre().equals("");
        !tr1.getArea().toString().equals("A");
        !ta1.getUnidades() > 0;
        ta1.getTipo().equals(tr1.getUso());
    actions
        tr1.setMinutosTrabajados("A");
        tr1.setArea("A");
        tr1.setHerramienta();
        modified(tr1);
}
